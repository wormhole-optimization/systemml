#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

foo = function(Frame[String] F, String jspec) 
  return (Matrix[Double] RX, Frame[String] RM) 
{
  #prevent function inlining
  while(FALSE){}

  [RX, RM] = transformencode(target=F, spec=jspec);
}

F = read($1, data_type="frame", format="csv");

#make size unknown for recompile
if( sum(rand(rows=10,cols=1))<1 ) {
   F = rbind(F, F);
}

jspec = "{\"ids\": true,\"recode\": [1,2,3,4,5]}";
[X, M] = foo(F, jspec);

F2 = transformdecode(target=X, spec=jspec, meta=M);
write(F2, $2, format="csv");

#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------


/*
 * DML script to test Singular Value Decomposition (SVD)
 */
 
A = read($1);

[U, S, V] = svd(A);

# U(and V) must be orthogonal i.e., U = U^{-1} and V = V^{-1}
I1 = U %*% t(U);
I2 = V %*% t(V);

Urows = nrow(U);
Ucols = ncol(U);
Vrows = nrow(V);
Vcols = ncol(V);

# check for, whether the U and V are square or not.
#if ( Urows == Ucols & Vrows == Vcols) {
  a = sum(I1) / Urows;
  b = sum(I2) / Vrows;
#}

D = matrix(1,1,1);

if ( abs(1-a)<10e-4 & abs(1-b)<10e-4 ) {

  # Multiplying U, S and t(V), we must get back original A
  B = U %*% S %*% t(V);

  diff = sum(A - B);
  # write the difference between original A and computed B as a dummy 1x1 matrix
  D = diff*D;
  
}

write (D, $2);

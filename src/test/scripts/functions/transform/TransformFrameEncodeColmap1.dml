#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

F1 = read($DATA);
jspec = read($TFSPEC, data_type="scalar", value_type="string");

[X, M] = transformencode(target=F1, spec=jspec);
map = transformcolmap(target=M, spec=jspec);

F2 = as.frame(matrix(0, nrow(F1), 1));
for(i in 1:nrow(map)) {
   T = X[, as.scalar(map[i,2]):as.scalar(map[i,3])];
   if( ncol(T)==1 )
      Tf = as.frame(T);
   else
      Tf = transformdecode(target=T, meta=M[,i], spec="{ids:true, dummycode:[1]}");
   F2 = cbind(F2, Tf);
}
F2 = F2[,2:ncol(F2)];

write(F2, $TFDATA, format=$OFMT);
